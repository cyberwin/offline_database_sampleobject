var CyberWin_MS=function(table,dbname){var database_name=dbname,table=table,sql_p="",sql_v="",condition="";console.log(dbname),this.database_name=dbname,this.table=table,this.condition="",this.test=function(){console.log("测试"+database)},this.createTable=function(){},this.insert=function(){},this.query=function(o,e){this.database_name,this.table},this.update=function(o,e){},this.del=function(o){},this.dropTable=function(){},this.exec=function(o,e){},this.add=function(o,e){var l=this.database_name+"AAAA"+this.table;for(var n in window.localStorage.setItem(`${l}`,JSON.stringify(o)),sql_p="insert into "+table+"(",sql_v="values ( ",o)console.log(n),console.log(o[n]),sql_p=sql_p+n+"  ,",sql_v=sql_v+"'"+o[n]+"',";sql_v=sql_v.substring(0,sql_v.length-1),sql_p=sql_p.substring(0,sql_p.length-1);var t=(sql_p+=")")+(sql_v+=")");dataBase.transaction(function(o){o.executeSql(t,[],function(){e(!0)},function(o,l){e(l.message)})})},this.where=function(o){var e="";if("string"!=typeof o){for(var l in o)sql_p=sql_p+l+"  ,",e=e+""+l+" = '"+o[l]+"',";this.condition=e}else this.condition=o},this.find=function(callback,匹配模式,匹配数量){console.clear();var 未来之窗数据库_条件_解码=this._parseCondition(this.condition),未来之窗数据库=this.database_name+"AAAA"+this.table,未来之窗数据库数据str=window.localStorage.getItem(`${未来之窗数据库}`);if(未来之窗数据库数据=eval("("+未来之窗数据库数据str+")"),console.log("============空值查询============="),console.log(未来之窗数据库_条件_解码),console.log("condition="+this.condition),console.log(未来之窗数据库数据),console.log("匹配模式==>"+匹配模式),console.log("匹配数量==>"+匹配数量),console.log("============空值查询============="),""==未来之窗数据库_条件_解码)return console.log("空值查询"),"function"==typeof callback&&callback("wlzc",未来之窗符合条件数据),未来之窗数据库数据;const 未来之窗符合条件数据=[];if("and"==匹配模式)for(const o of 未来之窗数据库数据){var 已经匹配数量=0;for(const e of 未来之窗数据库_条件_解码)if(console.log("未来之窗数据库数据-AND==>"+e.field+" operator="+e.operator+" value="+e.value),o[e.field]){var 巡逻数值=""+o[e.field];console.log("未来之窗数据库数据=巡逻数值AND=>"+巡逻数值),1==巡逻数值.includes(e.value)?(console.log("存在符合AND=>"+e.field),已经匹配数量+=1):console.log("存在不符合AND=>"+e.field+",查找；"+e.value)}else console.log("不存在这个AND=>"+o.field);console.log("匹配数量要求==>"+匹配数量+" ,已经匹配数量="+已经匹配数量),匹配数量==已经匹配数量&&未来之窗符合条件数据.push(o)}else for(const o of 未来之窗数据库数据)for(const e of 未来之窗数据库_条件_解码)if(console.log("未来之窗数据库数据==>"+e.field+" operator="+e.operator+" value="+e.value),o[e.field]){var 巡逻数值=""+o[e.field];if(console.log("未来之窗数据库数据=巡逻数值=>"+巡逻数值),1==巡逻数值.includes(e.value)){console.log("存在符合=>"+e.field),未来之窗符合条件数据.push(o);break}console.log("存在不符合=>"+e.field+",查找；"+e.value)}else console.log("不存在这个=>"+e.field);return"function"==typeof callback&&callback("wlzc",未来之窗符合条件数据),未来之窗符合条件数据},this.delete=function(o){},this._parseCondition=function(o){if(""==(o=""+o))return"";const e=(o=o.trim()).split(/\s*(AND|OR)\s*/gi),l=[];for(const o of e){const e=o.match(/(\w+)\s*([=<>!|like]+)\s*([\-\w\u4e00-\u9fff]+)/);if(e){const o=e[1],n=e[2],t=e[3];l.push({field:o,operator:n,value:t})}}return l}};